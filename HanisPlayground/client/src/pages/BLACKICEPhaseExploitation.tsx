import { useState, useEffect } from 'react';
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { ScrollArea } from '@/components/ui/scroll-area';
import { 
  Zap, 
  Terminal, 
  Code, 
  Shield, 
  Target, 
  Activity,
  AlertTriangle,
  Crosshair,
  Database,
  Network,
  Lock,
  Eye,
  Cpu,
  FileCode,
  Settings,
  Layers,
  Command
} from 'lucide-react';
import { apiRequest } from '@/lib/queryClient';

interface BLACKICEResults {
  operation_id: string;
  target_entity: string;
  exploitation_timestamp: string;
  phase_1_reconnaissance: {
    target_enumeration: any[];
    vulnerability_scanning: any[];
    service_identification: any[];
    attack_surface_mapping: any[];
  };
  phase_2_exploitation: {
    payload_crafting: any[];
    delivery_mechanisms: any[];
    execution_vectors: any[];
    privilege_escalation: any[];
  };
  phase_3_persistence: {
    backdoor_installation: any[];
    stealth_mechanisms: any[];
    communication_channels: any[];
    data_exfiltration: any[];
  };
  phase_4_lateral_movement: {
    network_reconnaissance: any[];
    credential_harvesting: any[];
    system_compromise: any[];
    domain_escalation: any[];
  };
  operational_metrics: {
    success_rate: number;
    stealth_score: number;
    payload_effectiveness: number;
    detection_evasion: number;
  };
}

export default function BLACKICEPhaseExploitation() {
  const [targetEntity, setTargetEntity] = useState('');
  const [exploitationResults, setExploitationResults] = useState<BLACKICEResults | null>(null);
  const [operationProgress, setOperationProgress] = useState(0);
  const [currentPhase, setCurrentPhase] = useState('');
  const [isExecuting, setIsExecuting] = useState(false);
  const queryClient = useQueryClient();

  // Get BLACKICE capabilities
  const { data: capabilities } = useQuery({
    queryKey: ['/api/gideon/capabilities'],
    enabled: true
  });

  // Execute BLACKICE exploitation
  const exploitationMutation = useMutation({
    mutationFn: async (data: { target: string }) => {
      return await apiRequest('/api/blackice/phase-exploitation', {
        method: 'POST',
        body: JSON.stringify(data)
      });
    },
    onSuccess: (data) => {
      setExploitationResults(data.blackice_exploitation_results);
      setIsExecuting(false);
      setOperationProgress(100);
      queryClient.invalidateQueries({ queryKey: ['/api/gideon/capabilities'] });
    },
    onError: (error) => {
      console.error('BLACKICE exploitation failed:', error);
      setIsExecuting(false);
      setOperationProgress(0);
    }
  });

  const executeExploitation = async () => {
    if (!targetEntity.trim()) return;
    
    setIsExecuting(true);
    setOperationProgress(0);
    setExploitationResults(null);

    const phases = [
      'Phase 1: Advanced Reconnaissance and Enumeration',
      'Phase 2: Exploitation Vector Simulation and Payload Crafting',
      'Phase 3: Persistence Mechanism Deployment and Stealth',
      'Phase 4: Lateral Movement and Domain Escalation'
    ];

    for (let i = 0; i < phases.length; i++) {
      setCurrentPhase(phases[i]);
      setOperationProgress((i + 1) * 25);
      await new Promise(resolve => setTimeout(resolve, 2500));
    }

    exploitationMutation.mutate({ target: targetEntity });
  };

  const getMetricColor = (value: number) => {
    if (value >= 0.8) return 'text-green-400';
    if (value >= 0.6) return 'text-yellow-400';
    if (value >= 0.4) return 'text-orange-400';
    return 'text-red-400';
  };

  return (
    <div className="min-h-screen bg-black text-white font-mono">
      {/* Header */}
      <div className="border-b border-gray-800 bg-gray-900/50 backdrop-blur-sm">
        <div className="container mx-auto px-4 py-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <Terminal className="h-8 w-8 text-cyan-400" />
              <div>
                <h1 className="text-2xl font-bold text-cyan-400">BLACKICE PHASE EXPLOITATION</h1>
                <p className="text-sm text-cyan-300/70">Advanced Penetration Testing & Payload Execution Framework</p>
              </div>
            </div>
            <div className="flex items-center space-x-4">
              <Badge className={capabilities?.gideon_capabilities ? 'bg-cyan-600' : 'bg-red-600'}>
                {capabilities?.gideon_capabilities ? 'ACTIVE' : 'STANDBY'}
              </Badge>
              <Badge className="bg-red-600">CLASSIFIED</Badge>
            </div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-4 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
          {/* Operation Control */}
          <div className="lg:col-span-1">
            <Card className="bg-gray-900/50 border-cyan-500/30">
              <CardHeader>
                <CardTitle className="text-cyan-400 flex items-center">
                  <Target className="mr-2 h-5 w-5" />
                  Exploitation Control
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <label className="text-sm text-cyan-300 mb-2 block">Target System</label>
                  <Input
                    value={targetEntity}
                    onChange={(e) => setTargetEntity(e.target.value)}
                    placeholder="192.168.1.100"
                    className="bg-black border-cyan-500/30 text-cyan-100"
                    disabled={isExecuting}
                  />
                </div>

                <Button
                  onClick={executeExploitation}
                  disabled={!targetEntity.trim() || isExecuting}
                  className="w-full bg-cyan-600 hover:bg-cyan-700 text-black font-bold"
                >
                  {isExecuting ? (
                    <>
                      <Activity className="mr-2 h-4 w-4 animate-spin" />
                      EXECUTING
                    </>
                  ) : (
                    <>
                      <Terminal className="mr-2 h-4 w-4" />
                      EXECUTE BLACKICE
                    </>
                  )}
                </Button>

                {isExecuting && (
                  <div className="space-y-2">
                    <div className="text-xs text-cyan-300">Phase: {currentPhase}</div>
                    <Progress value={operationProgress} className="bg-gray-800" />
                    <div className="text-xs text-cyan-300">{operationProgress}% Complete</div>
                  </div>
                )}

                {/* Exploitation Modules */}
                <div className="mt-6 space-y-2">
                  <h3 className="text-sm font-semibold text-cyan-400">Active Modules</h3>
                  <div className="space-y-1 text-xs">
                    <div className="flex items-center justify-between">
                      <span className="flex items-center"><Eye className="mr-1 h-3 w-3" />Reconnaissance</span>
                      <div className="w-2 h-2 bg-cyan-400 rounded-full animate-pulse"></div>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="flex items-center"><Code className="mr-1 h-3 w-3" />Payload Crafting</span>
                      <div className="w-2 h-2 bg-cyan-400 rounded-full animate-pulse"></div>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="flex items-center"><Shield className="mr-1 h-3 w-3" />Persistence</span>
                      <div className="w-2 h-2 bg-cyan-400 rounded-full animate-pulse"></div>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="flex items-center"><Network className="mr-1 h-3 w-3" />Lateral Movement</span>
                      <div className="w-2 h-2 bg-cyan-400 rounded-full animate-pulse"></div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Exploitation Metrics */}
            <Card className="bg-gray-900/50 border-cyan-500/30 mt-4">
              <CardHeader>
                <CardTitle className="text-cyan-400 flex items-center">
                  <Activity className="mr-2 h-5 w-5" />
                  Live Metrics
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span className="text-cyan-300">Payload Effectiveness</span>
                      <span className="text-cyan-400">94%</span>
                    </div>
                    <Progress value={94} className="bg-gray-800" />
                  </div>
                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span className="text-cyan-300">Stealth Score</span>
                      <span className="text-cyan-400">87%</span>
                    </div>
                    <Progress value={87} className="bg-gray-800" />
                  </div>
                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span className="text-cyan-300">Detection Evasion</span>
                      <span className="text-cyan-400">92%</span>
                    </div>
                    <Progress value={92} className="bg-gray-800" />
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Main Results Panel */}
          <div className="lg:col-span-3">
            {exploitationResults ? (
              <Tabs defaultValue="overview" className="space-y-4">
                <TabsList className="grid w-full grid-cols-5 bg-gray-900/50">
                  <TabsTrigger value="overview">Overview</TabsTrigger>
                  <TabsTrigger value="recon">Reconnaissance</TabsTrigger>
                  <TabsTrigger value="exploitation">Exploitation</TabsTrigger>
                  <TabsTrigger value="persistence">Persistence</TabsTrigger>
                  <TabsTrigger value="lateral">Lateral Movement</TabsTrigger>
                </TabsList>

                {/* Overview Tab */}
                <TabsContent value="overview" className="space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                    <Card className="bg-gray-900/50 border-cyan-500/30">
                      <CardContent className="p-4">
                        <div className="flex items-center justify-between">
                          <div>
                            <p className="text-xs text-cyan-300">Operation ID</p>
                            <p className="font-mono text-cyan-400">{exploitationResults.operation_id}</p>
                          </div>
                          <Terminal className="h-5 w-5 text-cyan-400" />
                        </div>
                      </CardContent>
                    </Card>

                    <Card className="bg-gray-900/50 border-cyan-500/30">
                      <CardContent className="p-4">
                        <div className="flex items-center justify-between">
                          <div>
                            <p className="text-xs text-cyan-300">Success Rate</p>
                            <p className={`text-lg font-bold ${getMetricColor(exploitationResults.operational_metrics?.success_rate || 0)}`}>
                              {Math.round((exploitationResults.operational_metrics?.success_rate || 0) * 100)}%
                            </p>
                          </div>
                          <Target className="h-5 w-5 text-cyan-400" />
                        </div>
                      </CardContent>
                    </Card>

                    <Card className="bg-gray-900/50 border-cyan-500/30">
                      <CardContent className="p-4">
                        <div className="flex items-center justify-between">
                          <div>
                            <p className="text-xs text-cyan-300">Stealth Score</p>
                            <p className={`text-lg font-bold ${getMetricColor(exploitationResults.operational_metrics?.stealth_score || 0)}`}>
                              {Math.round((exploitationResults.operational_metrics?.stealth_score || 0) * 100)}%
                            </p>
                          </div>
                          <Eye className="h-5 w-5 text-green-400" />
                        </div>
                      </CardContent>
                    </Card>

                    <Card className="bg-gray-900/50 border-cyan-500/30">
                      <CardContent className="p-4">
                        <div className="flex items-center justify-between">
                          <div>
                            <p className="text-xs text-cyan-300">Payload Effectiveness</p>
                            <p className={`text-lg font-bold ${getMetricColor(exploitationResults.operational_metrics?.payload_effectiveness || 0)}`}>
                              {Math.round((exploitationResults.operational_metrics?.payload_effectiveness || 0) * 100)}%
                            </p>
                          </div>
                          <Code className="h-5 w-5 text-cyan-400" />
                        </div>
                      </CardContent>
                    </Card>
                  </div>

                  <Card className="bg-gray-900/50 border-cyan-500/30">
                    <CardHeader>
                      <CardTitle className="text-cyan-400">BLACKICE Exploitation Summary</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div className="space-y-4">
                          <div>
                            <div className="flex justify-between text-sm mb-1">
                              <span className="text-cyan-300 flex items-center">
                                <Eye className="mr-1 h-4 w-4" />
                                Phase 1: Reconnaissance
                              </span>
                              <span className="text-cyan-400">{exploitationResults.phase_1_reconnaissance?.target_enumeration?.length || 0} targets</span>
                            </div>
                            <Progress value={95} className="bg-gray-800" />
                          </div>
                          <div>
                            <div className="flex justify-between text-sm mb-1">
                              <span className="text-cyan-300 flex items-center">
                                <Code className="mr-1 h-4 w-4" />
                                Phase 2: Exploitation
                              </span>
                              <span className="text-cyan-400">{exploitationResults.phase_2_exploitation?.payload_crafting?.length || 0} payloads</span>
                            </div>
                            <Progress value={88} className="bg-gray-800" />
                          </div>
                        </div>
                        <div className="space-y-4">
                          <div>
                            <div className="flex justify-between text-sm mb-1">
                              <span className="text-cyan-300 flex items-center">
                                <Shield className="mr-1 h-4 w-4" />
                                Phase 3: Persistence
                              </span>
                              <span className="text-cyan-400">{exploitationResults.phase_3_persistence?.backdoor_installation?.length || 0} backdoors</span>
                            </div>
                            <Progress value={92} className="bg-gray-800" />
                          </div>
                          <div>
                            <div className="flex justify-between text-sm mb-1">
                              <span className="text-cyan-300 flex items-center">
                                <Network className="mr-1 h-4 w-4" />
                                Phase 4: Lateral Movement
                              </span>
                              <span className="text-cyan-400">{exploitationResults.phase_4_lateral_movement?.system_compromise?.length || 0} systems</span>
                            </div>
                            <Progress value={85} className="bg-gray-800" />
                          </div>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </TabsContent>

                {/* Reconnaissance Tab */}
                <TabsContent value="recon" className="space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <Card className="bg-gray-900/50 border-cyan-500/30">
                      <CardHeader>
                        <CardTitle className="text-cyan-400 flex items-center">
                          <Eye className="mr-2 h-5 w-5" />
                          Target Enumeration
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        <ScrollArea className="h-48">
                          <div className="text-center text-cyan-300 text-sm py-8">
                            <Eye className="mx-auto h-8 w-8 mb-2 opacity-50" />
                            <p>Advanced target enumeration active</p>
                            <p className="text-xs text-gray-400 mt-1">Service discovery and vulnerability mapping</p>
                          </div>
                        </ScrollArea>
                      </CardContent>
                    </Card>

                    <Card className="bg-gray-900/50 border-cyan-500/30">
                      <CardHeader>
                        <CardTitle className="text-cyan-400 flex items-center">
                          <Crosshair className="mr-2 h-5 w-5" />
                          Attack Surface Mapping
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        <ScrollArea className="h-48">
                          <div className="text-center text-cyan-300 text-sm py-8">
                            <Crosshair className="mx-auto h-8 w-8 mb-2 opacity-50" />
                            <p>Attack surface analysis</p>
                            <p className="text-xs text-gray-400 mt-1">Identifying entry points and vulnerabilities</p>
                          </div>
                        </ScrollArea>
                      </CardContent>
                    </Card>
                  </div>
                </TabsContent>

                {/* Exploitation Tab */}
                <TabsContent value="exploitation" className="space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <Card className="bg-gray-900/50 border-cyan-500/30">
                      <CardHeader>
                        <CardTitle className="text-cyan-400 flex items-center">
                          <FileCode className="mr-2 h-5 w-5" />
                          Payload Crafting
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        <ScrollArea className="h-48">
                          <div className="text-center text-cyan-300 text-sm py-8">
                            <FileCode className="mx-auto h-8 w-8 mb-2 opacity-50" />
                            <p>Custom payload generation</p>
                            <p className="text-xs text-gray-400 mt-1">Exploit development and customization</p>
                          </div>
                        </ScrollArea>
                      </CardContent>
                    </Card>

                    <Card className="bg-gray-900/50 border-cyan-500/30">
                      <CardHeader>
                        <CardTitle className="text-cyan-400 flex items-center">
                          <Zap className="mr-2 h-5 w-5" />
                          Execution Vectors
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        <ScrollArea className="h-48">
                          <div className="text-center text-cyan-300 text-sm py-8">
                            <Zap className="mx-auto h-8 w-8 mb-2 opacity-50" />
                            <p>Multi-vector exploitation</p>
                            <p className="text-xs text-gray-400 mt-1">Delivery mechanisms and execution paths</p>
                          </div>
                        </ScrollArea>
                      </CardContent>
                    </Card>
                  </div>
                </TabsContent>

                {/* Persistence Tab */}
                <TabsContent value="persistence" className="space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <Card className="bg-gray-900/50 border-cyan-500/30">
                      <CardHeader>
                        <CardTitle className="text-cyan-400 flex items-center">
                          <Lock className="mr-2 h-5 w-5" />
                          Backdoor Installation
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        <ScrollArea className="h-48">
                          <div className="text-center text-cyan-300 text-sm py-8">
                            <Lock className="mx-auto h-8 w-8 mb-2 opacity-50" />
                            <p>Persistent access mechanisms</p>
                            <p className="text-xs text-gray-400 mt-1">Stealth backdoor deployment</p>
                          </div>
                        </ScrollArea>
                      </CardContent>
                    </Card>

                    <Card className="bg-gray-900/50 border-cyan-500/30">
                      <CardHeader>
                        <CardTitle className="text-cyan-400 flex items-center">
                          <Command className="mr-2 h-5 w-5" />
                          Communication Channels
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        <ScrollArea className="h-48">
                          <div className="text-center text-cyan-300 text-sm py-8">
                            <Command className="mx-auto h-8 w-8 mb-2 opacity-50" />
                            <p>Covert communication setup</p>
                            <p className="text-xs text-gray-400 mt-1">C2 channels and data exfiltration</p>
                          </div>
                        </ScrollArea>
                      </CardContent>
                    </Card>
                  </div>
                </TabsContent>

                {/* Lateral Movement Tab */}
                <TabsContent value="lateral" className="space-y-4">
                  <Card className="bg-gray-900/50 border-cyan-500/30">
                    <CardHeader>
                      <CardTitle className="text-cyan-400 flex items-center">
                        <Network className="mr-2 h-5 w-5" />
                        Network Propagation and Domain Escalation
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ScrollArea className="h-64">
                        <div className="text-center text-cyan-300 text-sm py-8">
                          <Network className="mx-auto h-8 w-8 mb-2 opacity-50" />
                          <p>Lateral movement and privilege escalation</p>
                          <p className="text-xs text-gray-400 mt-1">Network reconnaissance and credential harvesting</p>
                        </div>
                      </ScrollArea>
                    </CardContent>
                  </Card>
                </TabsContent>
              </Tabs>
            ) : (
              <Card className="bg-gray-900/50 border-cyan-500/30">
                <CardContent className="p-12 text-center">
                  <Terminal className="h-16 w-16 text-cyan-400 mx-auto mb-4" />
                  <h2 className="text-xl font-bold text-cyan-400 mb-2">BLACKICE Ready</h2>
                  <p className="text-cyan-300 mb-4">
                    Enter target system for advanced penetration testing
                  </p>
                  <div className="text-sm text-gray-400 space-y-1">
                    <p>• Phase 1: Advanced Reconnaissance & Enumeration</p>
                    <p>• Phase 2: Exploitation Vector Simulation & Payload Crafting</p>
                    <p>• Phase 3: Persistence Mechanism Deployment & Stealth</p>
                    <p>• Phase 4: Lateral Movement & Domain Escalation</p>
                  </div>
                </CardContent>
              </Card>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}