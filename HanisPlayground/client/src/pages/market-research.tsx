import React, { useState } from 'react';
import { useMutation } from '@tanstack/react-query';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Badge } from '@/components/ui/badge';
import { Loader, ArrowLeft, FileText, Download, Brain } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import { apiRequest } from '@/lib/queryClient';
import { Link } from 'wouter';

interface ResearchResult {
  success: boolean;
  research: string;
  industry: string;
  region: string;
  focus: string;
  model: string;
  timestamp: string;
}

export default function MarketResearch() {
  const [industry, setIndustry] = useState('');
  const [region, setRegion] = useState('global');
  const [focus, setFocus] = useState('trends');
  const [result, setResult] = useState<ResearchResult | null>(null);
  const { toast } = useToast();

  const researchMutation = useMutation({
    mutationFn: async (data: { industry: string; region: string; focus: string }) => {
      const response = await apiRequest('POST', '/api/market-research', data);
      return response.json();
    },
    onSuccess: (data: ResearchResult) => {
      setResult(data);
      toast({
        title: "Research Complete",
        description: `Market research for ${data.industry} in ${data.region} generated successfully`,
      });
    },
    onError: (error: any) => {
      toast({
        title: "Research Error",
        description: error.message || "Failed to generate research",
        variant: "destructive",
      });
    }
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!industry.trim()) return;

    researchMutation.mutate({
      industry: industry.trim(),
      region,
      focus
    });
  };

  const regionOptions = [
    { value: 'global', label: 'Global Market' },
    { value: 'north-america', label: 'North America' },
    { value: 'europe', label: 'Europe' },
    { value: 'asia-pacific', label: 'Asia-Pacific' },
    { value: 'latin-america', label: 'Latin America' },
    { value: 'middle-east-africa', label: 'Middle East & Africa' }
  ];

  const focusOptions = [
    { value: 'trends', label: 'Market Trends' },
    { value: 'growth', label: 'Growth Opportunities' },
    { value: 'competition', label: 'Competitive Landscape' },
    { value: 'consumers', label: 'Consumer Behavior' },
    { value: 'technology', label: 'Technology Impact' },
    { value: 'regulations', label: 'Regulatory Environment' }
  ];

  const downloadReport = () => {
    if (!result) return;
    
    const reportContent = `
Market Research Report
======================

Industry: ${result.industry}
Region: ${result.region}
Focus: ${result.focus}
Generated: ${new Date(result.timestamp).toLocaleString()}
AI Model: ${result.model}

${result.research}

---
Generated by IntelSphere Market Research Platform
    `.trim();

    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${result.industry}_${result.region}_market_research.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-950 via-blue-950 to-purple-950 p-6">
      <div className="max-w-6xl mx-auto space-y-6">
        
        {/* Header */}
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-4">
            <Link href="/">
              <Button variant="outline" size="sm" className="text-white border-gray-600">
                <ArrowLeft className="h-4 w-4 mr-2" />
                Back to Dashboard
              </Button>
            </Link>
            <div className="flex items-center space-x-3">
              <Brain className="h-8 w-8 text-purple-400" />
              <h1 className="text-3xl font-bold text-white">Market Research</h1>
            </div>
          </div>
          <Badge variant="outline" className="text-purple-400 border-purple-400">
            AI-Powered Research
          </Badge>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          
          {/* Input Form */}
          <Card className="bg-gray-900/50 border-gray-700">
            <CardHeader>
              <CardTitle className="text-white flex items-center">
                <FileText className="mr-2 h-5 w-5" />
                Generate Research
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <form onSubmit={handleSubmit} className="space-y-4">
                <div>
                  <label className="text-sm font-medium text-gray-300 mb-2 block">
                    Industry/Market
                  </label>
                  <Input
                    value={industry}
                    onChange={(e) => setIndustry(e.target.value)}
                    placeholder="Enter industry (e.g., AI Technology, E-commerce, Healthcare)"
                    className="bg-gray-800 border-gray-600 text-white"
                  />
                </div>

                <div>
                  <label className="text-sm font-medium text-gray-300 mb-2 block">
                    Geographic Region
                  </label>
                  <Select value={region} onValueChange={setRegion}>
                    <SelectTrigger className="bg-gray-800 border-gray-600 text-white">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent className="bg-gray-800 border-gray-600">
                      {regionOptions.map((option) => (
                        <SelectItem key={option.value} value={option.value} className="text-white hover:bg-gray-700">
                          {option.label}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <label className="text-sm font-medium text-gray-300 mb-2 block">
                    Research Focus
                  </label>
                  <Select value={focus} onValueChange={setFocus}>
                    <SelectTrigger className="bg-gray-800 border-gray-600 text-white">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent className="bg-gray-800 border-gray-600">
                      {focusOptions.map((option) => (
                        <SelectItem key={option.value} value={option.value} className="text-white hover:bg-gray-700">
                          {option.label}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <Button 
                  type="submit" 
                  disabled={!industry.trim() || researchMutation.isPending}
                  className="w-full bg-purple-600 hover:bg-purple-700"
                >
                  {researchMutation.isPending ? (
                    <>
                      <Loader className="mr-2 h-4 w-4 animate-spin" />
                      Generating Research...
                    </>
                  ) : (
                    'Generate Market Research'
                  )}
                </Button>
              </form>

              {/* Research Examples */}
              <div className="space-y-3">
                <h3 className="text-sm font-medium text-gray-300">Research Includes:</h3>
                <div className="space-y-2 text-sm text-gray-400">
                  <div className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-purple-400 rounded-full" />
                    <span>Market size and growth projections</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-blue-400 rounded-full" />
                    <span>Key trends and market drivers</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-green-400 rounded-full" />
                    <span>Major players and market share</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-yellow-400 rounded-full" />
                    <span>Emerging opportunities and risks</span>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Results */}
          <Card className="bg-gray-900/50 border-gray-700">
            <CardHeader>
              <div className="flex items-center justify-between">
                <CardTitle className="text-white">Research Results</CardTitle>
                {result && (
                  <Button 
                    onClick={downloadReport}
                    variant="outline" 
                    size="sm"
                    className="text-white border-gray-600"
                  >
                    <Download className="h-4 w-4 mr-2" />
                    Download Report
                  </Button>
                )}
              </div>
            </CardHeader>
            <CardContent>
              {!result && !researchMutation.isPending ? (
                <div className="text-center text-gray-400 py-20">
                  <Brain className="h-16 w-16 mx-auto mb-4 opacity-50" />
                  <p className="text-lg">Ready to Generate Research</p>
                  <p className="text-sm mt-2">Enter an industry and select parameters to begin</p>
                </div>
              ) : researchMutation.isPending ? (
                <div className="text-center text-gray-400 py-20">
                  <Loader className="h-16 w-16 mx-auto mb-4 animate-spin opacity-50" />
                  <p className="text-lg">Generating Market Research...</p>
                  <p className="text-sm mt-2">AI is analyzing market data and industry trends</p>
                </div>
              ) : result ? (
                <div className="space-y-4">
                  {/* Research Header */}
                  <div className="flex items-center justify-between p-4 bg-gray-800/50 rounded-lg">
                    <div>
                      <h3 className="text-lg font-semibold text-white">{result.industry}</h3>
                      <p className="text-sm text-gray-400">{result.region} • {result.focus}</p>
                    </div>
                    <div className="text-right">
                      <Badge className="bg-purple-500 text-white">{result.model}</Badge>
                      <p className="text-xs text-gray-400 mt-1">
                        {new Date(result.timestamp).toLocaleString()}
                      </p>
                    </div>
                  </div>

                  {/* Research Content */}
                  <div className="bg-gray-800/30 p-6 rounded-lg">
                    <div className="prose prose-invert max-w-none">
                      <div className="whitespace-pre-wrap text-gray-200 leading-relaxed">
                        {result.research}
                      </div>
                    </div>
                  </div>
                </div>
              ) : null}
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}